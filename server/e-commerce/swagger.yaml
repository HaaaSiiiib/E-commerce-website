openapi: 3.0.0
info:
  version: 1.0.0
  title: E-commerce
  description: "An e-commerce site API made as a part of the course CSE-446"

servers:
  - url: https://ecom.cse446.ml/api/v1


paths:

  /auth/signup:
    post:
      tags:
        - auth
      description: Sign up for an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error



  /auth/login:
    post:
      tags:
        - auth
      description: Log into your account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  default: customer@gmail.com
                password:
                  type: string
                  default: 12345678

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error



  /users/{id}:
    get:
      tags:
        - users
      description: Obtain information about a user from user-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            default: 2

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []


    put:
      tags:
        - users
      description: Edit user information by user-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            default: 2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []



  /users/{id}/bank:
    post:
      tags:
        - users
      description: Update your bank transaction information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            default: 2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accountNumber
                - accountPassword
              properties:
                accountNumber:
                  type: string
                  default: d5511754-1bfa-49c8-8f41-f4de1544cd07
                accountPassword:
                  type: string
                  default: 12345678

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []


  /products:
    get:
      tags:
        - products
      description: Get all products

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []

    post:
      tags:
        - products
      description: Add a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - imgUrl
                - price
              properties:
                name:
                  type: string
                  default: Window curtain
                imgUrl:
                  type: string
                  default: https://windowcurtain.jpg
                price:
                  type: number
                  default: 150

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []




  /products/{id}:
    get:
      tags:
        - products
      description: Get product details from product-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            default: 1

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []


    delete:
      tags:
        - products
      description: Get product details from product-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            default: 1

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []



  /carts:

    get:
      tags:
        - carts
      description: Get cart details from cart-id

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []

    post:
      tags:
        - carts
      description: Add product to cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - productId
                  amount
              properties:
                productId:
                  type: string
                  default: 1
                amount:
                  type: integer
                  default: 1

    delete:
      tags:
        - carts
      description: Clear your cart
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            default: 2

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []


      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []





  /orders/{id}:
    get:
      tags:
        - orders
      description: Get order details from order-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            default: 2

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []


  /orders:
    get:
      tags:
        - orders
      descriptions: Get all orders for current logged in user
      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []




    post:
      tags:
        - orders
      description: Make an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - shippingAddress
              properties:
                shippingAddress:
                  type: string
                  default: house no 34

      responses:
        '2XX':
          description: Successfully processed request
        '4XX':
          description: Client error
        '5XX':
          description: Server error

      security:
        - bearerAuth: []



components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      required:
        - name
        - email
        - phone
        - address
        - password
      properties:
        name:
          type: string
          default: test account
        email:
            type: string
            default: test@gmail.com
        phone:
            type: string
            default: 9765210
        address:
            type: string
            default: house 34
        password:
            type: string
            default: 12345678

    Product:
      type: object
      required:
        - name
        - imgUrl
        - price
      properties:
        name:
          type: string
          default: Flower vase
        imgUrl:
            type: string
            default: https://someimage.jpg
        price:
            type: number
            default: 150


    Cart:
      type: object
      required:
        - productId
        - amount
      properties:
        productId:
          type: number
          default: 1
        amount:
            type: number
            default: 1
        price:
            type: number


  parameters:
    PageLimit:
      name: limit
      in: query
      description: Limits the number of items on a page
      schema:
        type: integer

    PageOffset:
      name: offset
      in: query
      description: Specifies the page number of the artists to be displayed
      schema:
        type: integer

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string